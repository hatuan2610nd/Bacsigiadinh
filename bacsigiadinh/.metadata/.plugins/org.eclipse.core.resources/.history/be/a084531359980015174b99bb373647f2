package com.mta.th10.bacsigiadinh;

import java.util.ArrayList;
import java.util.List;
import com.mta.th10.bacsigiadinh.adapters.GridMenuAdapter;
import com.mta.th10.bacsigiadinh.fragments.TimNhaThuocFragment;
import com.mta.th10.bacsigiadinh.fragments.TinTucFragment;
import com.mta.th10.bacsigiadinh.fragments.TinhChiSoFragment;
import com.mta.th10.bacsigiadinh.fragments.TraCuuBenhFragment;
import com.mta.th10.bacsigiadinh.fragments.TraCuuThuocFragment;
import com.mta.th10.bacsigiadinh.fragments.sub.DanhSachFavFragment;
import com.mta.th10.bacsigiadinh.tasks.CopyDatabaseTask;
import com.mta.th10.bacsigiadinh.viewmodels.MainMenuItem;

import android.content.res.Configuration;
import android.os.Bundle;
import android.support.v4.app.ActionBarDrawerToggle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentTransaction;
import android.support.v4.widget.DrawerLayout;
import android.util.Log;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import mta.th10.bacsigiadinh.interfaces.ITitleFragment;
import android.widget.GridView;

public class MainActivity extends FragmentActivity implements OnItemClickListener {
	private ActionBarDrawerToggle mDrawerToggle;
	private DrawerLayout drawerLayout;
	private boolean changTitle = false;
	private String currentTitle;
	private GridView gridview_main_menu;
	List<MainMenuItem> menuItems;

	// private Stack<Fragment> stack;
	public static MainActivity Current;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		Current = this;

		new CopyDatabaseTask().execute(this);

		setContentView(R.layout.activity_main);

		drawerLayout = (DrawerLayout) this.findViewById(R.id.drawer_layout);
		gridview_main_menu = (GridView) this.findViewById(R.id.gridview_main_menu);

		// drawerLayout.setDrawerListener(new DrawerLayout.DrawerListener() {
		//
		// @Override
		// public void onDrawerStateChanged(int arg0) {
		// }
		//
		// @Override
		// public void onDrawerSlide(View arg0, float arg1) {
		// }
		//
		// @Override
		// public void onDrawerOpened(View arg0) {
		//
		// }
		//
		// @Override
		// public void onDrawerClosed(View arg0) {
		//
		// }
		// });
		mDrawerToggle = new ActionBarDrawerToggle(this, drawerLayout, R.drawable.ic_drawer, // nav
																							// menu
																							// toggle
																							// icon
				R.string.app_name, // nav drawer open - description for
									// accessibility
				R.string.app_name // nav drawer close - description for
									// accessibility
		) {
			public void onDrawerClosed(View view) {
				if (changTitle == false)
					setTitle(currentTitle);
				changTitle = false;
				invalidateOptionsMenu();
			}

			public void onDrawerOpened(View drawerView) {
				currentTitle = getTitle().toString();
				setTitle("Bác sĩ gia đình");
				invalidateOptionsMenu();
			}
		};
		drawerLayout.setDrawerListener(mDrawerToggle);
		// SetupGridViewMenu();
		// showFragment(fragment);
	}

	private void SetupGridViewMenu() {
		menuItems = new ArrayList<MainMenuItem>();
		menuItems.add(new MainMenuItem("Tìm nhà thuốc", R.drawable.ic_nhathuoc, new TimNhaThuocFragment()));
		menuItems.add(new MainMenuItem("Tin tức", R.drawable.ic_tintuc, new TinTucFragment()));
		menuItems.add(new MainMenuItem("Tra cứu thuốc", R.drawable.ic_thuoc, new TraCuuThuocFragment()));
		menuItems.add(new MainMenuItem("Tra cứu bệnh", R.drawable.ic_benh, new TraCuuBenhFragment()));
		menuItems.add(new MainMenuItem("Tủ thuốc", R.drawable.ic_bacsi, new DanhSachFavFragment()));
		menuItems.add(new MainMenuItem("Chỉ số", R.drawable.ic_congcu, new TinhChiSoFragment()));

		GridMenuAdapter adapter = new GridMenuAdapter(this, R.layout.item_main_menu, menuItems);
		gridview_main_menu.setAdapter(adapter);
		gridview_main_menu.setOnItemClickListener(this);

		// showFragment(menuItems.get(1).getFragment());
	}

	Fragment currentFragment;

	@Override
	public void onItemClick(AdapterView<?> arg0, View arg1, int pos, long arg3) {
		changTitle = true;
		MainMenuItem item = menuItems.get(pos);
		for (int i = 0; i < getSupportFragmentManager().getBackStackEntryCount(); i++)
			getSupportFragmentManager().popBackStack();

		getSupportFragmentManager().beginTransaction().setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE)
				.replace(R.id.fragment_main_view, item.getFragment()).commit();

		drawerLayout.closeDrawers();
		currentFragment = item.getFragment();
		updateTitle(currentFragment);
	}

	public void OnCreateDatabaseDone() {
		Log.d("MainActivity", "OnCreateDatabaseDone");
		SetupGridViewMenu();
		Fragment f = menuItems.get(2).getFragment();

		getSupportFragmentManager().beginTransaction().replace(R.id.fragment_main_view, f).commit();
		updateTitle(f);
	}

	@Override
	public void onBackPressed() {
		if (getSupportFragmentManager().getBackStackEntryCount() >= 1) {
			updateTitle(getSupportFragmentManager().getFragments()
					.get(getSupportFragmentManager().getFragments().size() - 1));
			Log.d("check", "Back");
			super.onBackPressed();
		} else {
			Log.d("check", "Thoát");
			super.onBackPressed();
		}
		updateTitle();
	}

	public void showFragment(Fragment fragment) {
		Log.d("check show", fragment.getClass().getName());
		getSupportFragmentManager().beginTransaction().setTransition(FragmentTransaction.TRANSIT_FRAGMENT_FADE)
				.addToBackStack(fragment.getId() + "").replace(R.id.fragment_main_view, fragment).commit();
		updateTitle(fragment);
	}

	public void updateTitle(Fragment f) {
		try {
			ITitleFragment t = (ITitleFragment) f;
			if (t != null)
				setTitle(t.getTitle());
		} catch (Exception e) {
		}
	}

	public void updateTitle() {

	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// toggle nav drawer on selecting action bar app icon/title
		if (mDrawerToggle.onOptionsItemSelected(item)) {
			return true;
		}
		// Handle action bar actions click
		switch (item.getItemId()) {
		case R.id.action_settings:
			return true;
		default:
			return super.onOptionsItemSelected(item);
		}
	}

	@Override
	protected void onPostCreate(Bundle savedInstanceState) {
		super.onPostCreate(savedInstanceState);
		// Sync the toggle state after onRestoreInstanceState has occurred.
		mDrawerToggle.syncState();
	}

	@Override
	public void onConfigurationChanged(Configuration newConfig) {
		super.onConfigurationChanged(newConfig);
		// Pass any configuration change to the drawer toggls
		mDrawerToggle.onConfigurationChanged(newConfig);
	}
}
